<?php

// Hooks and callbacks for integrating with File Entity module for display.
include_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'sbac_media') . '/includes/sbac_media.formatters.inc';

include_once 'sbac_media.features.inc';

/**
 * Implements hook_media_internet_providers().
 */
function sbac_media_media_internet_providers() {
  $info['MediaInternetSchoolTubeHandler'] = array(
    'title' => t('SchoolTube'),
  );
  $info['MediaInternetTeacherTubeHandler'] = array(
    'title' => t('TeacherTube'),
  );
  $info['MediaInternetSlideShareHandler'] = array(
    'title' => t('SlideShare'),
  );
  return $info;
}

/**
 * Implements hook_stream_wrappers().
 */
function sbac_media_stream_wrappers() {
  return array(
    'schooltube' => array(
      'name' => t('SchoolTube videos'),
      'class' => 'MediaSchoolTubeStreamWrapper',
      'description' => t('Videos provided by SchoolTube.'),
      'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
    'teachertube' => array(
      'name' => t('TeacherTube videos'),
      'class' => 'MediaTeacherTubeStreamWrapper',
      'description' => t('Videos provided by TeacherTube.'),
      'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
    'slideshare' => array(
      'name' => t('SlideShare presentations'),
      'class' => 'MediaSlideShareStreamWrapper',
      'description' => t('Presentations provided by SlideShare.'),
      'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),       
  );
}

/**
 * Implements hook_theme().
 */
function sbac_media_theme($existing, $type, $theme, $path) {
  return array(
    'media_sbac_schooltube_video' => array(
      'variables' => array('uri' => NULL, 'options' => array()),
      'file' => 'sbac_media.theme.inc',
      'path' => $path . '/includes',
      'template' => 'media-schooltube-video',
    ),
    'media_sbac_teachertube_video' => array(
      'variables' => array('uri' => NULL, 'options' => array()),
      'file' => 'sbac_media.theme.inc',
      'path' => $path . '/includes',
      'template' => 'media-teachertube-video',
    ),
    'media_sbac_schooltube_video' => array(
      'variables' => array('uri' => NULL, 'options' => array()),
      'file' => 'sbac_media.theme.inc',
      'path' => $path . '/includes',
      'template' => 'media-slideshare-presentation',
    ),        
  );
}

/**
 * Implements hook_file_mimetype_mapping_alter().
 *
 * Regster the video/youtube mimetype.
 */
function sbac_media_file_mimetype_mapping_alter(&$mapping) {
  $mapping['mimetypes'][] = 'video/schooltube';
  $mapping['mimetypes'][] = 'video/teachertube';
  $mapping['mimetypes'][] = 'video/slideshare';
}

/*
 * Helper function to create embed URLs because of different implmenetation
 */
function sbac_media_create_embed_url($file) {
  $wrapper = file_stream_wrapper_get_instance_by_uri($file['uri']);
  $parts = $wrapper->get_parameters();
  $id = check_plain($parts['v']);

  switch($file['filemime']) {
    case 'video/schooltube': 
      $url = '//www.schooltube.com/embed_force/' . $id;
      break;
    case 'video/slideshare':
      $url = '//www.slideshare.net/slideshow/embed_code/' . $id . '?rel=0';
      break;
    case 'video/teachertube':
      $url = 'http://www.teachertube.com/embed.php?pg=video_' . $id;
      break;
    case 'video/vimeo':
      $url = '//player.vimeo.com/video/' . $id;
      break;
    case 'video/youtube':
      $url = '//www.youtube.com/embed/' . $id;
      break;
  }
  return url($url, array('external' => TRUE));
}

/**
 * Perform alterations on file formatters.
 *
 * Set related videos to false for youtube.
 *
 * @param $info
 *   Array of information on file formatters exposed by
 *   hook_file_formatter_info() implementations.
 */
function sbac_media_file_formatter_info_alter(&$info) {
  if (isset($info['media_youtube_video'])) {
    $info['media_youtube_video']['default_settings']['rel'] = FALSE;
  }
}