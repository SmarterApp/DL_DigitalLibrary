<?php

/**
 * Implementation of hook_schema()
 */
function sbac_share_schema() {
  $schema['sbac_share'] = array(
    'description' => t('Stores keys to generate an expiring anonymous url'),
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => TRUE,
        'description' => t('Blind primary key'),
	    ),
	    'nid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The nid of the resource'),
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The uid who viewed the resource'),
      ),
      'create_datetime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The unix_timestamp create date'),
      ),
      'expire_datetime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The unix_timestamp expiration date'),
      ),
      'key'=>array(
        'type'=>'varchar',
        'length'=>'255',
        'not null'=>FALSE,
        'description'=>t('contains a key to be shared with the anonymous user'),
	    ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'nid' => array('nid','key'),
      'uid' => array('uid'),
    ),
  );

  $schema['sbac_share_link_copy_count'] = array(
    'description' => t('Saves the count of permanent or temporary links that are copied via button click'),
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => TRUE,
        'description' => t('Blind primary key.'),
      ),
      'nid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The nid of the resource.'),
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The uid who copied the link.'),
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The unix_timestamp create date.'),
      ),
      'type' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => t('The type of link (temp or permanent).'),
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'nid' => array('nid'),
      'uid' => array('uid'),
      'multi' => array('nid', 'uid', 'created'),
    ),
  );

  return $schema;
}

/**
 * Implements of hook_update_N().
 *
 * Adds the public flag to the table.
 */
function sbac_share_update_7001() {
  $ret = array();

  db_query("ALTER TABLE {sbac_share} ADD COLUMN public int not null default 0");

  return $ret;
}


/**
 * Implements of hook_update_N().
 *
 * Adds the new table.
 */
function sbac_share_update_7002() {
  $ret = array();
  $schema = drupal_get_schema('sbac_share_link_copy_count', TRUE);
  db_create_table('sbac_share_link_copy_count', $schema);
  return $ret;
}

/**
 * Implements of hook_update_N().
 *
 * Adds the access_count to the table.
 */
function sbac_share_update_7003() {
  $ret = array();

  db_query("ALTER TABLE {sbac_share} ADD COLUMN access_count int not null default 0");

  return $ret;
}
