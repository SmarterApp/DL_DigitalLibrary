<?php

/**
 * Implementation of hook_schema()
 */
function sbac_share_schema() {
  $schema['sbac_share'] = array(
    'description' => t('Stores keys to generate an expiring anonymous url'),
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => TRUE,
        'description' => t('Blind primary key'),
	    ),
	    'nid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The nid of the resource'),
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The uid who viewed the resource'),
      ),
      'create_datetime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The unix_timestamp create date'),
      ),
      'expire_datetime' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => FALSE,
        'description' => t('The unix_timestamp expiration date'),
      ),
      'key'=>array(
        'type'=>'varchar',
        'length'=>'255',
        'not null'=>FALSE,
        'description'=>t('contains a key to be shared with the anonymous user'),
	    ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'nid' => array('nid','key'),
      'uid' => array('uid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function sbac_share_install() {
  $guest_role = new stdClass();
  $guest_role->name = SBAC_SHARE_GUEST;
  user_role_save($guest_role);
}

/**
 * Implements hook_uninstall().
 */
function sbac_share_uninstall() {
  user_role_delete(SBAC_SHARE_GUEST);
}
