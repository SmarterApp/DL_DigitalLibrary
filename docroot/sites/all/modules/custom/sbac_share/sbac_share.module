<?php
/**
 * @file
 * Code for the SBAC Anonymous URL features.
 */

/**
 * Implementation of hook_menu().
 */
function sbac_share_menu() {
  //the menu call to generate the url.
  //sbac_share_form posts here
  $items['sbac-share/generate-url'] = array(
    'title' => 'Generate a URL',
    'description' => 'Generates an expiring URL',
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'page callback' => 'sbac_share_generate_url',
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Generates a URL and returns to the user.
 */
function sbac_share_generate_url() {
  global $user;
  $path = '/';
  if ($_REQUEST['nid']) {
    $node = node_load($_REQUEST['nid']);
    //get the path of the node
    $path = drupal_lookup_path('alias', "node/" . $node->nid);
    if ($node->status == 1) {
      //generate the key
      $key = md5(time() . $node->nid . $path);
      //generate the new path
      $expire_date = time() + (60 * 60 * 24 * $_REQUEST['ttl']);
      //store the new path in the table
      $entity = new stdClass();
      $entity->nid = $node->nid;
      $entity->uid = $user->uid;
      $entity->key = $key;
      $entity->create_datetime = time();
      $entity->expire_datetime = $expire_date;
      drupal_write_record('sbac_share', $entity);
      $message = t("This url : " . url($path, array(
          'absolute' => TRUE,
          'query' => array('key' => $key)
        )) . " : expires on " . date("F j, Y, g:i a", $expire_date));
    }
    else {
      $message = t("Hey, this node ain't published.  You need to provide this only for published nodes!!");
    }
  }
  else {
    $message = t("Oops!  Something went a little wonky, please try again!");
  }
  drupal_set_message($message);
  drupal_goto($path);
}

/**
 * Creates the form.
 *
 * @param $form
 * @param $form_state
 * @return mixed
 */
function sbac_share_form($form, &$form_state) {
  global $user;
  $form['#action'] = url('generate_url');

  // Returns a generate url form
  $form['ttl'] = array(
    '#title' => t('Days to Live'),
    '#type' => 'select',
    '#options' => range(0, 31),
    '#default_value' => 1,
    '#required' => TRUE,
    '#description' => t('Select the number of days to keep this link active'),
  );
  // Nid.
  $form['nid'] = array(
    '#type' => 'hidden',
  );
  // Submit.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Create Expiring URL', //this comes in as the $form->op value
  );
  // ? John K special.
  if (in_array('digital library administrator', $user->roles) || in_array('system administrator', $user->roles) || $user->uid == 1) {
    $form['ttl']['#options']['32'] = 'Infinite';
  }
  return $form;
}

/**
 * Grabs the node by key.
 *
 * @param $key
 * @return int
 */
function sbac_share_get_node_by_key($key) {
  $return = 0;
  $now = time();
  $query = "SELECT * FROM {node_anonymous_url} WHERE key = :key AND expire_datetime > :time LIMIT 1";
  $row = db_query($query, array(':key' => $_GET['key'], ':time' => $now))->fetchAssoc();
  if ($row['key'] == $_GET['key']) {
    $return = $row['nid'];
  }
  return $return;
}


function sbac_share_resource_node_view($node) {
  return 'hi';
}
