<?php

/**
 * Implementation of hook_schema()
 */
function sbac_flag_schema() {
  $schema['sbac_flag'] = array(
    'description' => t('Stores flag info'),
    'fields' => array(
      'id' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'auto_increment' => TRUE,
        'description' => t('Blind primary key'),
	    ),
	    'nid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The nid of the resource'),
      ),
      'uid' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The uid who flagged the resource'),
      ),
      'created' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The unix_timestamp create date'),
      ),
      'flag' => array(
        'type'=>'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => t('The flag term that was selected.'),
	    ),
      'flag_comment' => array(
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'description' => t('The flag comment if provided.'),
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'nid' => array('nid'),
      'uid' => array('uid'),
      'combo' => array('nid', 'uid'),
    ),
  );

  return $schema;
}

/**
 * Implements of hook_update_N().
 *
 * Creates taxonomy terms.
 */
function sbac_flag_update_7002() {
  $return = array();
  $flags = array(
    'name' => array(
      0 => 'Outdated',
      1 => 'Inaccurate / misleading',
      2 => 'Unintelligible / not viewable / technology does not function properly',
      3 => 'Accessibility and accommodation issues',
      4 => 'Biased and objectionable or culturally insensitive material <span>(e.g. related to race, culture, religion, political viewpoint, gender, or socioeconomic status)</span>',
      5 => 'Contains personally identifiable information (PII)',
      6 => 'Summary information does not match the resource',
      7 => 'May be in violation of intellectual property rights',
      8 => 'Does not support implementation of Common Core Standards and/or formative assessment process',
      9 => 'Resource is not available free of charge'
    ),
    'weight' => array(
      0 => -10,
      1 => -9,
      2 => -8,
      3 => -7,
      4 => -6,
      5 => -5,
      6 => -4,
      7 => -3,
      8 => -2,
      9 => -1,
    ),
  );
  $vocab = db_query('SELECT * FROM {taxonomy_vocabulary} WHERE machine_name = :vocab', array(':vocab' => 'resource_flags'))->fetchAssoc();
  if ($vocab) {
    foreach ($flags['name'] as $index => $flag) {
      taxonomy_term_save((object) array(
        'name' => $flag,
        'description' => '',
        'weight' => $flags['weight'][$index],
        'vid' => $vocab['vid'],
      ));
    }
  }

  return $return;
}
