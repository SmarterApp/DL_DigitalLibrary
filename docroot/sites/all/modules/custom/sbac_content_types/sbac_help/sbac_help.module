<?php
/**
 * @file
 * Code for the SBAC Help feature.
 */
include_once 'sbac_help.features.inc';

/**
 * Implements hook_update_projects_alter().
 *
 * @param $projects
 */
function sbac_help_update_projects_alter(&$projects) {
  unset($projects['sbac_help']);
}

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function sbac_help_theme($existing, $type, $theme, $path) {
  $themes = array();

  $themes['views_view__help_topics__block'] = array(
    'template' => 'templates/views-view--help-topics--block',
    'arguments' => array('view' => NULL),
    'original hook' => 'views_view',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'sbac_help_preprocess_views_view__help_topics__block',
    ),
  );

  $themes['help_dropdown'] = array(
    'path' => drupal_get_path('module', 'sbac_help') . '/templates',
    'template' => 'help-drop-down',
  );

  $themes['help_dropdown_footer'] = array(
    'path' => drupal_get_path('module', 'sbac_help') . '/templates',
    'template' => 'help-drop-down-footer',
  );

  return $themes;
}

/*
 * Implements hook_menu().
 */
function sbac_help_menu() {
  $items['get-node-content'] = array(
    'title'         => 'Get Node Content',
    'page callback' => 'sbac_help_get_node_content',
    'access arguments'  => array('access content'),
    'type'          => MENU_CALLBACK,
  );

  $items['welcome-tutorial/remove/%'] = array(
    'title' => 'Welcome Tutorial Remove',
    'page callback' => 'sbac_help_remove',
    'page arguments' => array(2),
    'access callback' => 'user_access',
    'access arguments' => array('send approval emails'),
  );

  $items['sbac-help/%ctools_js/welcome-tutorial'] = array(
    'title' => 'Welcome Tutorial',
    'page callback' => 'sbac_help_welcome_tutorial_modal',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Preprocessor for the help_topics__block view.
 *
 * @param $vars
 */
function sbac_help_preprocess_views_view__help_topics__block(&$vars){
	drupal_add_css(drupal_get_path('module','sbac_help') . '/css/help.css');
}

/**
 * Implements hook_preprocess_page().
 *
 * @param $variables
 */
function sbac_help_preprocess_page(&$variables) {
  global $user;
  $variables['help_dropdown'] = NULL;
  if (user_is_logged_in()) {
    drupal_add_js(drupal_get_path('module','sbac_help') . '/js/sbac_help.js');
    ctools_include('modal');
    ctools_include('ajax');
    ctools_add_js('ajax-responder');
    ctools_modal_add_js();
    drupal_add_library('system', 'drupal.ajax');
    $variables['help_dropdown'] = theme('help_dropdown');
    if (!in_array('guest', $user->roles)) {
      $variables['help_dropdown_footer'] = theme('help_dropdown_footer');
    }
    $welcome_tutorial_button = l(t('Welcome Tutorial'), 'sbac-help/nojs/welcome-tutorial', array(
      'attributes' => array(
        'class' => 'ctools-use-modal button blue use-ajax ctools-modal-sbac-help-welcome-tutorial',
        'id' => 'sbac-help-welcome-tutorial'
      ),
    ));
    $js_settings = array('sbac-help-welcome-tutorial' => array('modalSize' => array('type' => 'fixed', 'width' => '800px', 'height' => '400px'), 'modalTheme' => 'CtoolSbacHelpWelcomeTutorial'));
    drupal_add_js($js_settings, 'setting');
    drupal_add_js(drupal_get_path('module', 'sbac_help') . '/js/sbac_help.ctools.js');
    $variables['welcome_tutorial_modal_button'] = $welcome_tutorial_button;
  }
}

/**
 * Function callback for get-node-content
 *
 * @param $nid
 */
function sbac_help_get_node_content() {
  $data = array();
  $nid = $_GET['nid'];
  if ($nid) {
    $node = node_load($nid, $vid = NULL, $reset = FALSE);
    if ($node) {
      $node_view = node_view($node, $view_mode = 'full', $langcode = NULL);
      $data = array(
        'results' => array(
          'body' => '<a class= "helpBack small button left" >Back</a>' . drupal_render($node_view['body']),
          'title' => $node->title
        )
      );
    }
  }

  print drupal_json_encode($data);
  exit();
}

/**
 * Implements hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function sbac_help_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'help_page_node_form') {
    $form['actions']['submit']['#submit'][] = 'sbac_help_remove_previous_resource_tutorial';
  }
}

/**
 * Remove the previously set resource tutorial help page
 *
 * @param $form
 * @param $form_state
 */
function sbac_help_remove_previous_resource_tutorial(&$form, &$form_state) {
  foreach ($form['field_help_page_topic']['und']['#options'] as $key => $value) {
    if ($value == 'Resource Tutorial') {
      $val = $key;
    }
  }
  // Check if Resource Tutorial checkbox is checked
  $nid = $form_state['values']['nid'];
  if (isset($val) && $form_state['input']['field_help_page_topic']['und'][$val]) {
    db_query('DELETE FROM {field_data_field_help_page_topic} WHERE field_help_page_topic_tid = :val AND entity_id <> :nid', array(':val' => $val, ':nid' => $nid));
    db_query('DELETE FROM {field_revision_field_help_page_topic} WHERE field_help_page_topic_tid = :val AND entity_id <> :nid', array(':val' => $val, ':nid' => $nid));
  }
}

/*
 * Implements hook_permission().
 *
 * remove welcome topics from list
 */
function sbac_help_permission() {
  return array(
    'send approval emails' => array(
      'title' => t('remove from list'),
    ),
  );
}

/**
 * Looks like it saves the node field and goes to a tab.
 *
 * @param $nid
 */
function sbac_help_remove($nid) {
  $node = node_load($nid);
  $node->field_help_page_topic = array();
  node_save($node);
  drupal_goto(drupal_get_origin() . '#topics-tab2');
}

/**
 * Gets the origin of the request.
 *
 * @return mixed
 */
function drupal_get_origin() {
  /* @var $_SERVER HTTP_REFERER works on our servers. */
  $path = $_SERVER['HTTP_REFERER'];
  if (isset($_GET['destination'])) {
    $path = $_GET['destination'];
  }
  return $path;
}

/*
 * Implements hook_form_alter().
 *
 * change "save" to "save order"
 */
function sbac_help_form_views_form_help_topics_page_2_alter(&$form, &$form_state, $form_id) {
  $form['actions']['submit']['#value'] = 'Save Order';
  $form['actions']['reset'] = array(
    '#type'   =>  'submit',
    '#value'  =>  'Reset to Alphabetical',
    '#submit' =>  array('sbac_help_delete_draggableviews_weights'),
  );
}

/**
 * Implemnts a hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function sbac_help_form_views_form_help_topics_page_4_alter(&$form, &$form_state, $form_id) {
  $form['actions']['submit']['#value'] = 'Save Order';
  $form['actions']['submit']['#submit'][] = 'sbac_help_stay_on_welcome_tutorial_tab';
}

/**
 * A submit callback on a form.
 *
 * @param $form
 * @param $form_state
 */
function sbac_help_stay_on_welcome_tutorial_tab(&$form, &$form_state) {
  drupal_custom_goto('/admin/help-topics#topics-tab2');
}

/**
 * Delete previous draggableviews weights on sort help topics screen
 *
 * @param $form
 * @param $form_state
 */
function sbac_help_delete_draggableviews_weights(&$form, &$form_state) {
  db_delete('draggableviews_structure')
    ->condition('view_name', 'help_topics')
    ->condition('view_display', 'page_2')
    ->execute();
}

/**
 * Loads up the welcome tutorial modal.
 *
 * @param bool $js
 */
function sbac_help_welcome_tutorial_modal($js = FALSE) {
  if ($js) {
    ctools_include('ajax');
    ctools_include('modal');
    ctools_add_js('ajax-responder');
    ctools_modal_add_js();

    $title = '<h2 class="helpmodal-title">Welcome to the Smarter Balanced Digital Library</h2>';
    $form_state = array(
      'title' => $title,
      'ajax' => TRUE,
    );
    $output = ctools_modal_form_wrapper('sbac_help_disable_help', $form_state);
    $rendered_form = $output[0]['output'];
    $final_form = '<div class="sbac-help-topics">' . $rendered_form . '</div>';
    $output[0]['output'] =  $final_form . '<div class="sbac-help-node-content"></div>';
    // This means the form has been executed
    if (!empty($form_state['executed'])) {
      $output = array();
      $output[] = ctools_modal_command_dismiss();
      if ($form_state['triggering_element']['#value'] == 'Close Welcome Tutorial') {
        global $user;
        user_save($user, array(
          'data' => array(
            'disable_help' => (int) $form_state['values']['disable_help'],
          )
        ));
      }
    }
    print ajax_render($output);
    exit();
  }
  else {
    return;
  }
}

/*
 * Form to enable/disable helper modal
 */
function sbac_help_disable_help($form, $form_state) {
  global $user;

  $form['prefix']['#markup'] = '<div class="sbac-help-container">';
  if (user_access('administrator') || $user->uid == 1 || in_array('DLRB member', $user->roles) || in_array('help desk', $user->roles)) {
    $output = '<div class="sort-link"><a title="Reorganize Help" href="/admin/help-topics" class="small button radius">Reorganize Help</a></div>';
    $form['admin_button']['#markup'] = $output;
  }
  $form['message']['#markup'] = '<p class="helpmodal-desc">' . t('The Digital Library is an online, user-friendly, searchable library for educators that contains only high-quality vetted resources. It is interactive and allows educators from member states to use and rate resources and collaborate. To learn more, click through the various welcome tutorials provided below:') . '</p>';
  $form['view']['#markup'] = '<div class="sbac-help-modal-view">' . views_embed_view('help_topics', 'block') . '</div>';
  $form['disable_help'] = array (
    '#type' => 'checkbox',
    '#title' => t('Do not show this screen after next Log in') . '<br /><i>' . t('View this screen again by selecting Welcome Tutorial from Help on top menu') . '</i>',
  );
  $form['submit'] = array (
    '#type' => 'submit',
    '#value' => 'Close Welcome Tutorial',
    '#suffix' => '</div>',
  );
  if (!isset($user->data['disable_help'])) {
    $form['disable_help']['#default_value'] = 0;
  }
  else {
    $form['disable_help']['#default_value'] = $user->data['disable_help'];
  }
  // remove cookie only when welcome modal is displayed
  user_cookie_delete('sbac_just_logged_in');
  return $form;
}
