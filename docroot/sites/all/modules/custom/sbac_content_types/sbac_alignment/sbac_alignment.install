<?php

/**
 * Implements of hook_update_N().
 *
 * Delete the alignment_type vocabulary
 */
function sbac_alignment_update_7001() {
  $ret = array();

  module_load_include('taxonomy','inc','field','field.crud','field_sql_storage');

  $findme = "alignment_type";
  $vocs = taxonomy_vocabulary_get_names();
  if (isset($vocs[$findme])) {
     $vid = $vocs[$findme]->vid;
     taxonomy_vocabulary_delete($vid);
     return true;
  }

  return false;
}
/**
 * Implements hook_update_N().
 * 
 * Delete and rebuild the alignment_type and education_alignment vocab
 */
function sbac_alignment_update_7002() {
  //
}
/**
 * Implements hook_update_N().
 * 
 * Delete and rebuild the alignment_type and education_alignment vocab
 */
function sbac_alignment_update_7003() {
  $alignment_type_vocab_name = 'alignment_type';
  $edu_alignment_vocab_name = "education_alignment";
  
  $alignment_type_vocab = taxonomy_vocabulary_machine_name_load($alignment_type_vocab_name);
  $edu_alignment_vocab = taxonomy_vocabulary_machine_name_load($edu_alignment_vocab_name);
  $vocab_array = array($alignment_type_vocab, $edu_alignment_vocab);
  
  //Remove all existing terms
  foreach ($vocab_array as $vocab) {
    $terms = taxonomy_get_tree($vocab->vid);
    
    foreach ($terms as $term) {
      taxonomy_term_delete($term->tid);
    }
  }
  
  // Add alignment type
  $terms = array(
    'Assesses' => array(
      'desc' => 'lorem ipsum',  
    ),
    'Teaches' => array(
      'desc' => 'lorem ipsum',  
    ),
    'Requires' => array(
      'desc' => 'lorem ipsum',  
    ),
  );
  sbac_alignment_add_terms($alignment_type_vocab->vid, $terms);
  
  // Add education alignment
  $terms = array(
    'English Language Arts' => array(
      'desc' => 'lorem ipsum',
      'children' => array(
        '1IT' =>  array(
          'desc' => 'lorem ipsum',
          'children' => array(
            '10-1' =>  array(
              'desc' => 'lorem ipsum',
              'children' => array(
                '10.L.4a' => array(
                  'desc' => 'lorem ipsum',
                ),
                '10.L.4b' => array(
                  'desc' => 'lorem ipsum',
                ),
                '10.L.4c' => array(
                  'desc' => 'lorem ipsum',
                ),
              ),
            ),
          ),
        ),
        '1LT' =>  array(
          'desc' => 'lorem ipsum',
          'children' => array(
            '11-1' =>  array(
              'desc' => 'lorem ipsum',
              'children' => array(
                '11.L.4a' => array(
                  'desc' => 'lorem ipsum',
                ),
                '11.L.4b' => array(
                  'desc' => 'lorem ipsum',
                ),
                '11.L.4c' => array(
                  'desc' => 'lorem ipsum',
                ),
              ),
            ),
          ),
        ),
      ),
    ),
  );
  sbac_alignment_add_terms($edu_alignment_vocab->vid, $terms);
  
  return ;
}
/**
 * Implements hook_update_N().
 * Install sample set for ELA terms
 */
function sbac_alignment_update_7004() {
  //$edu_alignment_vocab_name = "education_alignment";
  //$filename = 'ela.sample.json';
  //
  //$edu_alignment_vocab = taxonomy_vocabulary_machine_name_load($edu_alignment_vocab_name);
  //$parents = $grade_terms = array();
  //$parent_tid = 0;
  //
  ////DELETE old terms
  //$terms = taxonomy_get_tree($edu_alignment_vocab->vid);
  //foreach ($terms as $term) {
  //  taxonomy_term_delete($term->tid);
  //}
  //
  //// Add education alignment
  //$terms = array(
  //  'English / Language Arts' => array(
  //    'children' => array(
  //      'KG - Kindergarten' =>  array(),
  //      '1 - First Grade' =>  array(),
  //      '2 - Second Grade' =>  array(),
  //      '3 - Third Grade' =>  array(),
  //      '4 - Fourth Grade' =>  array(),
  //      '5 - Fifth Grade' =>  array(),
  //      '6 - Sixth Grade' =>  array(),
  //      '7 - Seventh Grade' =>  array(),
  //      '8 - Eight Grade' =>  array(),
  //      '9 - Ninth Grade' =>  array(),
  //      '10 - Tenth Grade' =>  array(),
  //      '11 - Eleventh Grade' =>  array(),
  //      '12 - Twelveth Grade' =>  array(),
  //    ),
  //  ),
  //);
  //
  //sbac_alignment_add_terms($edu_alignment_vocab->vid, $terms);
  //
  //$subject = array_pop(taxonomy_get_term_by_name('English / Language Arts'));
  //
  ///** create terms*/
  //// get grades tids
  //$terms = taxonomy_get_tree($edu_alignment_vocab->vid, $subject->tid, 1, TRUE);
  //foreach ($terms as $term) {
  //  if($term->depth == 0) {
  //    $name = explode('-', $term->name);
  //    $grade_terms[trim($name[0])] = $term;
  //  }
  //}
  ////get data
  //$data = drupal_http_request(SBAC_ALIGNMENT_DATA_PATH . $filename);
  //$contents = $data->data;
  //$json = drupal_json_decode($contents);
  //
  //uasort($json, 'cmp');
  //
  //foreach ($json as $term) {
  //  $grade = trim($term['fkGradeLevel']);
  //
  //  // Root term. first set after the grade
  //  if ($term['treeLevel'] < 2) {
  //    $parent_tid = $grade_terms[$grade]->tid;
  //    $key = $grade . '|' . $term['key'];
  //    $parents[$key] = sbac_alignment_add_term($edu_alignment_vocab->vid, $term, $parent_tid);
  //  }
  //  elseif(($tree_level = $term['treeLevel']) >=2) {
  //    $parent_key = $grade . '|' . $term['fkParent'];
  //    //$parent_tid = sbac_alignment_get_parent($parent_key);
  //    $parent_tid = $parents[$parent_key]->tid;
  //    //dsm(array($parent_key, $parent_tid));
  //    if (empty($parent_tid)) {
  //      //cannot find parent save to grade
  //      $parent_tid = $grade_terms[$grade]->tid;
  //      $broken_terms[] = $term;
  //    }
  //    else {
  //    $key = $grade . '|' . $term['key'];
  //    $parents[$key] = sbac_alignment_add_term($edu_alignment_vocab->vid, $term, $parent_tid);
  //    }
  //  }
  //  else{
  //    //@TODO KS - need to output in case of error
  //  }
  //}
}