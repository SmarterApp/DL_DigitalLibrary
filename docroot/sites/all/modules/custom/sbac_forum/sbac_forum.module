<?php
/**
 * @file
 * Code for the SBAC Forum feature.
 */

include_once 'sbac_forum.features.inc';
include_once 'includes/sbac_forum.component_alter.inc';
include_once 'includes/sbac_forum.api.inc';
include_once 'includes/sbac_forum.ajax.inc';

define('SBAC_FORUM_CATEGORY_FILTERS', 'sbac-forum-category-filters');
define('SBAC_FORUM_MY_FORUM_CATEGORY_FILTERS', 'sbac-forum-my-forum-category-filters');

define('SBAC_FORUM_SUBNAV_ACTIVE', 'sbac-forum-sub-nav-active');
define('SBAC_FORUM_SUBNAV_ALL', 'all-forums');
define('SBAC_FORUM_SUBNAV_OWN', 'my-forum');
define('SBAC_FORUM_SUBNAV_KEYWORD', 'keyword-search');

define('SBAC_FORUM_FILTERS_CLOSED', 'sbac-forum-filters-closed');
define('SBAC_FORUM_MY_FORUM_FILTERS_CLOSED', 'sbac-forum-my-forum-filters-closed');

define('SBAC_FORUM_MEMBER_LIST_CACHE_ENTRY_NAME', 'forum-member-list-');
define('SBAC_FORUM_SHOW_JOIN_MESSAGE', 'sbac-forum-new-join');
define('SBAC_FORUM_USER_DATA_REMOVED_LIST_VAR_NAME', 'sbac_forum_user_data_removed_list');

/**
 * =============================================================================
 *
 *      Hooks
 *
 * =============================================================================
 */

/**
 * Implements hook_menu().
 */
function sbac_forum_menu() {
  $items['forums'] = array(
    'title' => 'Forums',
    'file' => 'includes/sbac_forum.pages.inc',
    'page callback' => 'sbac_forum_main_landing_page',
    'access callback' => '_sbac_forum_user_access',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
    'weight' => -10,
  );

  // Create own menu callback for adding a term. Dont need to mess with menu_alter.
  $items['forums/%taxonomy_vocabulary_machine_name/add'] = array(
    'title' => 'Start A Forum',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_form_term', array(), 1),
    'access callback' => '_sbac_forum_add_forum_user_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module', 'taxonomy'),
    'file' => 'taxonomy.admin.inc',
  );

  $items['forums/term/%taxonomy_term'] = array(
    'title' => 'Taxonomy term',
    'title callback' => 'taxonomy_term_title',
    'title arguments' => array(2),
    'page callback' => 'sbac_forum_view_forum_page',
    'page arguments' => array(2),
    'access callback' => '_sbac_forum_view_forum_user_access',
    'access arguments' => array(2),
    'file' => 'includes/sbac_forum.pages.inc',
  );

  $items['forums-main-page/reset/%/%'] = array(
    'title' => 'Forums',
    'file' => 'includes/sbac_forum.pages.inc',
    'page callback' => 'sbac_forum_main_landing_page_reset',
    'page arguments' => array(2,3),
    'access callback' => '_sbac_forum_user_access',
    'type' => MENU_CALLBACK,
  );

  // ----- Modals -----

  $items['sbac-forum/%ctools_js/forum-delete/%taxonomy_term'] = array(
    'page callback' => 'sbac_forum__ajax__delete_forum_modal_callback',
    'page arguments' => array(1, 3),
    'access callback' => '_sbac_forum_delete_forum_user_access',
    'access arguments' => array(3),
  );

  $items['sbac-forum/%ctools_js/forum-leave/%taxonomy_term'] = array(
    'page callback' => 'sbac_forum__ajax__leave_forum_modal_callback',
    'page arguments' => array(1, 3),
    'access arguments' => array('access content'),
  );

  $items['sbac-forum/%ctools_js/%taxonomy_term/members-edit/%/remove'] = array(
    'page callback' => 'sbac_forum__ajax__remove_member_modal_callback',
    'page arguments' => array(1, 2, 4),
    'access arguments' => array('access content'),
    'access callback' => '_sbac_forum_remove_members_user_access',
    'access arguments' => array(2, 4),
  );

  $items['sbac-forum/%ctools_js/%taxonomy_term/members-edit/%/restore'] = array(
    'page callback' => 'sbac_forum__ajax__restore_member_modal_callback',
    'page arguments' => array(1, 2, 4),
    'access arguments' => array('access content'),
    'access callback' => '_sbac_forum_restore_members_user_access',
    'access arguments' => array(2, 4),
  );

  $items['sbac-forum/%ctools_js/topic-delete/%taxonomy_term/%node'] = array(
    'page callback' => 'sbac_forum__ajax__delete_topic_modal_callback',
    'page arguments' => array(1, 3, 4),
    'access callback' => '_sbac_forum_delete_topic_user_access',
    'access arguments' => array(3, 4),
  );

  return $items;
}

/**
 * Access callback for Forums page.
 *
 * @return Boolean TRUE/FALSE if user has access to view this page.
 */
function _sbac_forum_user_access() {
  global $user;
  $access = FALSE;
  if (!empty($user->uid)) {
    $access = TRUE;
  }
  return $access;
}

/**
 * Access callback for Add Forum page.
 *
 * @return Boolean TRUE/FALSE if user has access to add a forum.
 */
function _sbac_forum_add_forum_user_access($vocabulary) {
  global $user;
  $access = FALSE;

  // If user is trying to url hack to add terms to other vocabs,
  //   return false immediately.
  if ($vocabulary->machine_name != 'forum') {
    return $access;
  }

  // Anon users should not have access.
  if (!empty($user->uid)) {
    // Facilitators or users with "administer taxonomy" perms can add forums
    if (in_array('facilitator', $user->roles) ||
        user_access('administer taxonomy') ) {
      $access = TRUE;
    }
  }
  return $access;
}

/**
 * Access callback for Forum View page.
 *
 * @return Boolean TRUE/FALSE if user has access to view a forum.
 */
function _sbac_forum_view_forum_user_access($term) {
  global $user;

  if ($user->uid == 1) { // Allow superadmin bypass
    return TRUE;
  }

  if ($user->uid == 0) { // Anon users have no access.
    return FALSE;
  }

  $membership_status = sbac_forum__api__check_user_is_forum_member($term->tid, $user->uid);
  if ($membership_status === 'removed') { // Removed users can no longer see forum.
    return FALSE;
  }

  $access = sbac_forum__api__check_forum_view_access($user, $term);
  return $access;
}

/**
 * Access callback for Forum Delete page.
 *
 * @return Boolean TRUE/FALSE if user has access to view a forum.
 */
function _sbac_forum_delete_forum_user_access($term) {
  global $user;
  $access = FALSE;

  if ($term->vocabulary_machine_name != 'forum') {
    return $access; // Someone trying to delete a taxonomy term not from forums
  }

  $vocab_id = $term->vid;
  $delete_perm = 'delete terms in ' . $vocab_id;
  $access = user_access($delete_perm);
  return $access;
}

/**
 * Access callback for Topic Delete page.
 *
 * @return Boolean TRUE/FALSE if user has access to delete a topic.
 */
function _sbac_forum_delete_topic_user_access($term, $topic) {
  global $user;
  $access = FALSE;

  if ($term->vocabulary_machine_name != 'forum') {
    return $access; // Someone trying to delete something related to a taxonomy term not from forums
  }

  $access = node_access('delete', $topic);
  return $access;
}

/**
 * Access callback for Modal URL for removing members callback.
 *
 * @return Boolean TRUE/FALSE if user has access to remove a member from a forum.
 */
function _sbac_forum_remove_members_user_access($term, $uid_to_remove) {
  global $user;
  $access = FALSE;

  if ($term->vocabulary_machine_name != 'forum') {
    return $access; // Someone trying to delete a taxonomy term not from forums
  }

  if (!in_array('facilitator', $user->roles)) { // Only faci can remove users.
    return $access;
  }

  $is_member = sbac_forum__api__check_user_is_forum_member($term->tid, $uid_to_remove);
  if ($is_member === TRUE) { // User to remove is a member of this current forum.
    $access = TRUE;
  }

  return $access;
}

/**
 * Access callback for Modal URL for re-adding members callback.
 *
 * @return Boolean TRUE/FALSE if user has access to remove a member from a forum.
 */
function _sbac_forum_restore_members_user_access($term, $uid_to_remove) {
  global $user;
  $access = FALSE;

  if ($term->vocabulary_machine_name != 'forum') {
    return $access; // Someone trying to delete a taxonomy term not from forums
  }

  if (!in_array('facilitator', $user->roles)) { // Only faci can remove users.
    return $access;
  }

  $is_member = sbac_forum__api__check_user_is_forum_member($term->tid, $uid_to_remove);
  if ($is_member === 'removed') { // User to re-add is a removed member of this current forum.
    $access = TRUE;
  }

  return $access;
}



/**
 * Implements hook_block_info().
 *
 * @return mixed
 */
function sbac_forum_block_info() {
  $blocks['sbac_forum_categories'] = array(
    'info' => t('Categories'),
    'region' => 'filter',
    'pages' => "forums",
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'status' => 1,
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * @param string $delta
 *
 * @return array
 */
function sbac_forum_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'sbac_forum_categories':
      module_load_include('inc', 'sbac_forum', 'includes/sbac_forum.forms');
      $block['subject'] = t('FORUM CATEGORIES');
      $block['content'] = drupal_get_form('sbac_forum_category_forum_form');
      break;
  }
  return $block;
}

/**
 * Implements hook_date_formats
 */
function sbac_forum_date_formats() {
  $formats = array();

  $new_formats = array(
    'forum_listing'  => 'M jS, Y g:i a',
  );

  foreach ($new_formats as $key => $value) {
    $formats[] = array(
      'type' => $key,
      'format' => $value,
      'locales' => array(),
    );
    variable_set('date_format_'. $key, $value);
  };

  return $formats;
}

/**
 * Implements hook_date_format_types
 */
function sbac_forum_date_format_types() {
  return array(
    'forum_listing' => t('Forum - Listing Page View'),
  );
}

/**
 * Implements hook_cron_queue_info()
 */
function sbac_forum_cron_queue_info() {
  $queues['sbac_forum_delete_orphaned_topics'] = array(
    'worker callback' => 'sbac_forum_delete_orphaned_topics_process',
    'time' => 60,
  );
  return $queues;
}

/**
 * Worker callback defined in hook_cron_queue_info()
 */
function sbac_forum_delete_orphaned_topics_process($item_nid) {
  if (isset($item_nid)) {
    $topic_node = node_load($item_nid);
    if ($topic_node) {
      $deleted_node_title = $topic_node->title;
      node_delete($item_nid);
      watchdog('action', 'Cleanup Task: Deleted Orphaned Topic "%name". Triggered by a Forum Deletion. ', array('%name' => $deleted_node_title));
    }
  }
}



/**
 * Implementation of hook_theme()
 */
function sbac_forum_theme($existing, $type, $theme, $path) {
  $items['sbac_forum_filter_categories'] = array(
    'path' => drupal_get_path('module', 'sbac_forum') . '/templates',
    'template' => 'forum-filter-categories',
    'variables' => array(
      'categories' => NULL,
      'cf_value' => NULL,
      'cf_html' => NULL,
    ),
  );

  $items['sbac_forum_render_target_forum'] = array(
    'path' => drupal_get_path('module', 'sbac_forum') . '/templates',
    'template' => 'forum-view-page',
    'variables' => array(
      'fields' => NULL,
    ),
  );

  // Node template override
  $items['node__topic'] = array(
    'render element' => 'elements',
    'path' => $path,// . '/templates',
    'file' => 'includes/sbac_forum.preprocess.inc',
    'template' => 'templates/node--topic',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_node',
      // 'sbac_forum_preprocess_node__topic', // This doesnt actually work. see sbac_forum_preprocess_node
    ),
  );

  $items['sbac_forum_comment__node_topic'] = array(
    'render element' => 'elements',
    'path' => $path,// . '/templates',
    'file' => 'includes/sbac_forum.preprocess.inc',
    'template' => 'templates/sbac-forum-comment--node-topic',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_comment',
    ),
  );

  //============== Views template overrides. ===============================

  /**
   * ---------- Forum list View.---------------
   */
  $items['views_view__forum_list__block'] = array(
    'template'             => 'views-view--forum-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list',
    'arguments'            => array('view' => null,),
    'original hook'        => 'views_view',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'sbac_forum_preprocess_views_view__forum_list__block',
    ),
  );

  $items['views_view_unformatted__forum_list__block'] = array(
    'template'             => 'views-view-unformatted--forum-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list',
    'arguments'            => array('view' => NULL, 'options' => NULL, 'rows' => NULL, 'title' => NULL),
    'original hook'        => 'views_view_unformatted',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_unformatted',
      'sbac_forum_preprocess_views_view_unformatted__forum_list__block',
    ),
  );

  $items['views_view_fields__forum_list__block'] = array(
    'template'             => 'views-view-fields--forum-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list',
    'arguments'            => array('view' => null, 'fields' => null, 'row' => null),
    'original hook'        => 'views_view_fields',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'sbac_forum_preprocess_views_view_fields__forum_list__block',
    ),
  );

  /**
   * ---------- Forum list EMPTY View.---------------
   */
  $items['views_view__forum_list_empty__block'] = array(
    'template'             => 'views-view--forum-list-empty--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list_empty',
    'arguments'            => array('view' => null,),
    'original hook'        => 'views_view',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'sbac_forum_preprocess_views_view__forum_list_empty__block',
    ),
  );

  $items['views_view_unformatted__forum_list_empty__block'] = array(
    'template'             => 'views-view-unformatted--forum-list-empty--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list_empty',
    'arguments'            => array('view' => NULL, 'options' => NULL, 'rows' => NULL, 'title' => NULL),
    'original hook'        => 'views_view_unformatted',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_unformatted',
      'sbac_forum_preprocess_views_view_unformatted__forum_list_empty__block',
    ),
  );

  $items['views_view_fields__forum_list_empty__block'] = array(
    'template'             => 'views-view-fields--forum-list-empty--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/forum_list_empty',
    'arguments'            => array('view' => null, 'fields' => null, 'row' => null),
    'original hook'        => 'views_view_fields',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'sbac_forum_preprocess_views_view_fields__forum_list_empty__block',
    ),
  );


  /**
   * ---------- Topic list View.---------------
   */
  $items['views_view__forum_topic_list__block'] = array(
    'template'             => 'views-view--forum-topic-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/topic_list',
    'arguments'            => array('view' => null,),
    'original hook'        => 'views_view',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'sbac_forum_preprocess_views_view__forum_topic_list__block',
    ),
  );

  $items['views_view_unformatted__forum_topic_list__block'] = array(
    'template'             => 'views-view-unformatted--forum-topic-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/topic_list',
    'arguments'            => array('view' => NULL, 'options' => NULL, 'rows' => NULL, 'title' => NULL),
    'original hook'        => 'views_view_unformatted',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_unformatted',
      'sbac_forum_preprocess_views_view_unformatted__forum_topic_list__block',
    ),
  );

  $items['views_view_fields__forum_topic_list__block'] = array(
    'template'             => 'views-view-fields--forum-topic-list--block',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/topic_list',
    'arguments'            => array('view' => null, 'fields' => null, 'row' => null),
    'original hook'        => 'views_view_fields',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'sbac_forum_preprocess_views_view_fields__forum_topic_list__block',
    ),
  );

  $items['views_view_field__forum_topic_list__block__uid'] = array(
    'template'             => 'views-view-field--forum-topic-list--block--uid',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/topic_list',
    'arguments'            => array('view' => null, 'field' => null, 'row' => null),
    'original hook'        => 'views_view_field',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_field',
      'sbac_forum_preprocess_views_view_field__forum_topic_list__block__uid',
    ),
  );

  $items['views_view_field__forum_topic_list__block__last_comment_uid'] = array(
    'template'             => 'views-view-field--forum-topic-list--block--last-comment-uid',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/topic_list',
    'arguments'            => array('view' => null, 'field' => null, 'row' => null),
    'original hook'        => 'views_view_field',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_field',
      'sbac_forum_preprocess_views_view_field__forum_topic_list__block__last_comment_uid',
    ),
  );


  /**
   * ---------- Member list View.---------------
   *
   *    NOTE: Affects both displays (block and block-1 aka Member and Removed)
   */
  $items['views_view__forum_member_list'] = array(
    'template'             => 'views-view--forum-member-list',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/member_list',
    'arguments'            => array('view' => null,),
    'original hook'        => 'views_view',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view',
      'sbac_forum_preprocess_views_view__forum_member_list',
    ),
  );

  $items['views_view_unformatted__forum_member_list'] = array(
    'template'             => 'views-view-unformatted--forum-member-list',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/member_list',
    'arguments'            => array('view' => NULL, 'options' => NULL, 'rows' => NULL, 'title' => NULL),
    'original hook'        => 'views_view_unformatted',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_unformatted',
      'sbac_forum_preprocess_views_view_unformatted__forum_member_list',
    ),
  );

  $items['views_view_fields__forum_member_list'] = array(
    'template'             => 'views-view-fields--forum-member-list',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/member_list',
    'arguments'            => array('view' => null, 'fields' => null, 'row' => null),
    'original hook'        => 'views_view_fields',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_fields',
      'sbac_forum_preprocess_views_view_fields__forum_member_list',
    ),
  );

  $items['views_view_field__forum_member_list__picture'] = array(
    'template'             => 'views-view-field--forum-member-list--picture',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/member_list',
    'arguments'            => array('view' => null, 'field' => null, 'row' => null),
    'original hook'        => 'views_view_field',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_field',
      'sbac_forum_preprocess_views_view_field__forum_member_list__picture',
    ),
  );

  $items['views_view_field__forum_member_list__uid'] = array(
    'template'             => 'views-view-field--forum-member-list--uid',
    'path'                 => drupal_get_path('module', 'sbac_forum') . '/templates/views/member_list',
    'arguments'            => array('view' => null, 'field' => null, 'row' => null),
    'original hook'        => 'views_view_field',
    'file'                 => '../../../includes/sbac_forum.preprocess.inc',
    'preprocess functions' => array(
      'template_preprocess',
      'template_preprocess_views_view_field',
      'sbac_forum_preprocess_views_view_field__forum_member_list__uid',
    ),
  );


  // ==================== End Views templates  =================================


  return $items;
}

/**
 * Implements hook_preprocess_node
 */
function sbac_forum_preprocess_node(&$vars) {
  if ($vars['type'] == 'topic') {
    module_load_include('inc', 'sbac_forum', 'includes/sbac_forum.preprocess');
    sbac_forum_preprocess_node__topic($vars);
  }
}

/**
 * Implements hook_node_access
 */
function sbac_forum_node_access($node, $op, $account) {
  if (isset($node->type)) {
    if ($node->type == 'topic') {
      switch ($op) {
        case 'view':
          // Check if the parent forum has access restrictions. (role or state)
          $node_data = entity_metadata_wrapper('node', $node);
          if (isset($node_data->field_topic_forum_parent)) {
            $parent_forum = $node_data->field_topic_forum_parent->value();
            $has_access = sbac_forum__api__check_forum_view_access($account, $parent_forum);
            if (!empty($has_access)) {
              return NODE_ACCESS_ALLOW;
            }
          }
          return NODE_ACCESS_DENY;
          break;
      }
    }
  }
}

/**
 * Implements hook_comment_view
 */
function sbac_forum_comment_view($comment, $view_mode, $langcode) {
}

/**
 * Implements hook_preprocess_comment
 */
function sbac_forum_preprocess_comment(&$vars) {
  if ($vars['elements']['#bundle'] == 'comment_node_topic') {
    module_load_include('inc', 'sbac_forum', 'includes/sbac_forum.preprocess');
    $vars['theme_hook_suggestions'][] = 'sbac_forum_comment__node_topic';
    sbac_forum_preprocess_sbac_forum_comment__node_topic($vars);
  }
}

// ========================= FORM ALTERS =======================================

/**
 * Implements hook_form_alter
 */
function sbac_forum_form_alter(&$form, $form_state, $form_id) {
}

// --------

/**
 * Implements hook_form_FORM-ID_alter
 */
function sbac_forum_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'taxonomy_form_term') {
    if ((isset($form['#term'])) &&
        (!isset($form['delete'])) &&
        ($form['#term']['vocabulary_machine_name'] == 'forum') ){
      // Hide the description field that comes with the taxonomy term entity.
      //   Use our own descrition field, more control.
      $form['description']['#access'] = FALSE;

      // Add length restriction.
      $form['name']['#maxlength'] = 75;
      $form['name']['#attributes']['maxlength_js_label'][0] = 'Character count: @remaining';
      $form['name']['#maxlength_js'] = TRUE;

      global $user;
      $help_text = '<div>*NOTE: <p>Facilitator fields and Member fields should not be modified directly.';
      $help_text .= 'If necessary, make sure to update "Administrative (hidden)" fields to preserve logic/stability</p>';
      $help_text .= '</div>';
      $form['group_hidden_label'] = array(
        '#markup' => $help_text,
        '#weight' => 9,
      );
      if ($user->uid != 1) { // Only super admin can see these fields.
        $can_see = FALSE;

        // Membership fields.
        $form['group_hidden_label']['#access'] = $can_see;
        $form['field_forum_facilitators']['#access'] = $can_see;
        $form['field_fc_forum_members']['#access'] = $can_see;

        // Stats fields.
        $form['field_forum_topic_count']['#access'] = $can_see;
        $form['field_forum_topic_comment_count']['#access'] = $can_see;
        $form['field_forum_member_count']['#access'] = $can_see;
        $form['field_forum_removed_member_count']['#access'] = $can_see;
        $form['field_forum_last_activity']['#access'] = $can_see;
      }

      $path_to_css_file = drupal_get_path('module', 'sbac_forum');
      $path_to_css_file .= '/css/sbac_forum.css';
      $form['#attached']['css'][] = $path_to_css_file;

      $form['name']['#title'] = 'Forum Title';

      // Tags fields. Add wrapper to group them
      $form['field_subject']['#prefix'] = '<div class="forum-tags-left">';
      $form['field_intended_end_user']['#suffix'] = '</div>';
      $form['field_grades']['#prefix'] = '<div class="forum-tags-right">';
      $form['field_intended_student']['#suffix'] = '</div><div class="clearfix"></div>';


      // Access fields. Modify behaviour.
      $form['field_forum_access_states']['#prefix'] = '<div class="forum-add-access-left">';
      $form['field_state']['#suffix'] = '</div>';
      // $form['field_state']['#suffix'] = '';
      $state_field_state = array(
        'visible' => array(
          ':input[name="field_forum_access_states[und]"]' => array('value' => 0),
        ),
      );
      $form['field_state']['#states'] = $state_field_state;
      unset($form['field_state'][LANGUAGE_NONE]['#options']['_none']); // remove none option

      $form['field_forum_access_user_roles']['#prefix'] = '<div class="forum-add-access-right">';
      $form['field_forum_access_role_list']['#suffix'] = '</div><div class="clearfix"></div>';
      $role_field_state = array(
        'visible' => array(
          ':input[name="field_forum_access_user_roles[und]"]' => array('value' => 0),
        ),
      );
      $form['field_forum_access_role_list']['#states'] = $role_field_state;
      unset($form['field_forum_access_role_list'][LANGUAGE_NONE]['#options']['_none']); // remove none option


      // Modify submit buttons
      $cancel_button_classes = 'sbac-forum-add-forum-cancel-button gray';
      $form['actions']['cancel_add'] = array(
        '#type'         => 'submit',
        '#value'        => t('Cancel'),
        '#weight' => 4,
        '#limit_validation_errors' => array(),
        '#attributes'   => array(
          'class' => array($cancel_button_classes),
        ),
        '#submit' => array('_sbac_forum__add_forum_form_redirect_submit'),
        '#prefix'       => '<div class="sbac-forum-add-forum-buttons">',
      );
      if (isset($form['actions']['delete'])) { // Edit form
        $form['actions']['delete']['#attributes']['class'] = array('red');
        // $form['actions']['delete']['#suffix'] = '</div>';
        $form['actions']['delete']['#access'] = FALSE; // Disable the delete button.
        $form['actions']['submit']['#suffix'] = '</div>';
      } else { // Add forum forum
        $form['actions']['submit']['#value'] = 'Start Forum';
        $form['actions']['submit']['#suffix'] = '</div>';
      }

      $form['#validate'][] = '_sbac_forum__forum_form__title_profanity_validate';
      $form['#validate'][] = '_sbac_forum__forum_form__access_field_validate';

      // Redirect on successful completion.
      $form['#submit'][] = '_sbac_forum__add_forum_form_redirect_submit';

    } elseif ((isset($form['#term'])) &&
        (isset($form['delete'])) &&
        ($form['#term']->vocabulary_machine_name == 'forum') ) {
      // This is the delete confirm form
      $forum_path = 'forums/term/' . $form['#term']->tid;
      $form['actions']['cancel']['#href'] = $forum_path;
      $form['actions']['cancel']['#options']['path'] = $forum_path;
    }

  }
}

function _sbac_forum__add_forum_form_redirect_submit($form, &$form_state) {
  $tid = 0;
  $link = 'forums';
  if (isset($form_state['term'])) {
    $tid = $form_state['term']->tid;
  }

  $triggering_element = $form_state['triggering_element']['#value'];
  if (!empty($tid)) {
    $link = 'forums/term/' . $tid;
    if (($triggering_element == 'Start Forum')) {
      $link_ops = array(
        'attributes' => array(
          'class' => 'in-message-new-topic-link',
        ),
        'query' => array('target-forum' => $tid),
      );
      $url = l('Post a Topic', 'node/add/topic', $link_ops);
      $message = 'Congratulations! You created a forum! '.$url.' to start a discussion';
      drupal_get_messages();
      drupal_set_message($message);
    }
  }

  $form_state['redirect'] = $link;
}

/**
 * Validation function for the title
 *
 * @param $form
 * @param $form_state
 */
function _sbac_forum__forum_form__title_profanity_validate(&$form, &$form_state) {
  $title = $form_state['values']['name'];
  $bad_words = profanity_validate_text($title);
  if ($bad_words) {
    $error = 'Please remove any inappropriate language from Forum Title.';
    form_set_error('name', $error);
  }
}

function _sbac_forum__forum_form__access_field_validate($form, &$form_state) {
  $values = $form_state['values'];

  global $user;
  $user_profile = user_load($user->uid);
  $user_profile_wrapper = entity_metadata_wrapper('user', $user_profile);
  $users_roles = array();
  if (isset($user_profile_wrapper->field_position)) {
    $position_term = $user_profile_wrapper->field_position->value();
    $users_roles[] = $position_term->tid;
  }
  $users_states = array();
  if (isset($user_profile_wrapper->field_state)) {
    $state_terms = $user_profile_wrapper->field_state->value();
    if (!empty($state_terms)) {
      foreach ($state_terms as $state) {
        $users_states[] = $state->tid;
      }
    }
  }


  $states_field_value = $values['field_forum_access_states'][LANGUAGE_NONE][0]['value'];
  if (!$states_field_value) {
    $selected_states = $values['field_state'];
    if (count($selected_states[LANGUAGE_NONE])) { // There will be one entry even if empty. Check value.
      $temp = $selected_states[LANGUAGE_NONE];
      $selected_value = array_shift($temp);
      if (empty($selected_value['tid'])) {
        form_set_error('field_state', 'At least one State must be selected');
      } else {
        $states_array = array();
        foreach ($selected_states[LANGUAGE_NONE] as $key => $value) {
          $states_array[] = $value['tid'];
        }
        $has_state = array_intersect($states_array, $users_states);
        if (empty($has_state)) {
          form_set_error('field_state', 'You must have at least 1 of your own states selected.');
        }
      }
    }
  }

  $roles_field_value = $values['field_forum_access_user_roles'][LANGUAGE_NONE][0]['value'];
  if (!$roles_field_value) {
    $selected_roles = $values['field_forum_access_role_list'];
    if (count($selected_roles[LANGUAGE_NONE]) == 1) { // There will be one entry even if empty. Check value.
      $temp = $selected_roles[LANGUAGE_NONE];
      $selected_value = array_shift($temp);
      if (empty($selected_value['value'])) {
        form_set_error('field_forum_access_role_list', 'At least one Role must be selected');
      } else {
        $roles_array = array();
        foreach ($selected_roles[LANGUAGE_NONE] as $key => $value) {
          $roles_array[] = $value['value'];
        }
        $has_role = array_intersect($roles_array, $users_roles);
        if (empty($has_role)) {
          form_set_error('field_forum_access_role_list', 'You must have at least your own role/title selected.');
        }
      }
    }
  }
}

// ---------

/**
 * Implements hook_form_alter
 */
function sbac_forum_form_topic_node_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#node'])) {
    if (!isset($form['#node']->nid) ) { // Add new topic form.
      drupal_set_title('Start a Topic');

      if (!($form_state['executed'])) { // Only set this on non-ajax requests. Basically on page load. You lose the GET var after ajax callback.
        $default_forum_parent = $_GET['target-forum'];
        // Have to set default forum that this topic relates to.
        $form_state['auto_default_forum_parent'] = array(
          '#type' => 'value',
          '#value' => $default_forum_parent,
        );
      }

      $form['actions']['submit']['#value'] = 'Start Topic';

      // Do access checks and validation to ensure topic relates to correct forum.
      $form['#validate'][] = '_sbac_forum__topic_form__default_parent_term_validate';
    } else { // Edit form
      if (isset($form['actions']['delete'])) { // Edit form
        $form['actions']['delete']['#attributes']['class'] = array('red');
        //$form['actions']['delete']['#suffix'] = '</div>';
        $form['actions']['delete']['#access'] = FALSE; // Disable the delete button.
      }
    }

    // Add length restriction.
    $form['title']['#maxlength'] = 75;
    $form['title']['#attributes']['maxlength_js_label'][0] = 'Character count: @remaining';
    $form['title']['#maxlength_js'] = TRUE;

    // File uploaded widget tweaks
    $form['field_topic_files'][LANGUAGE_NONE]['#file_upload_description'] = '';
    $js_file_path = drupal_get_path('module', 'sbac_forum') . '/js/sbac_forum.topic_form.js';
    $form['#attached']['js'][] = $js_file_path;

    // Do title profanity validation.
    $form['#validate'][] = '_sbac_forum__topic_form__title_profanity_validate';

    // Modify submit buttons
    $cancel_button_classes = 'sbac-forum-add-forum-cancel-button gray';
    $form['actions']['cancel_add'] = array(
      '#type'         => 'submit',
      '#value'        => t('Cancel'),
      '#weight' => 4,
      '#limit_validation_errors' => array(),
      '#attributes'   => array(
        'class' => array($cancel_button_classes),
      ),
      '#submit' => array('_sbac_forum__add_topic_form_redirect_submit'),
      '#prefix'       => '<div class="sbac-forum-add-topic-buttons">',
    );
    $form['actions']['submit']['#suffix'] = '</div>';
  }

  // Hide fields
  global $user;
  $has_access = FALSE;
  if ($user->uid == 1) {
    $has_access = TRUE; // Only allow superadmin to see fields.
  }
  $form['field_topic_forum_parent']['#access'] = $has_access;
  $form['author']['#access'] = $has_access;
  $form['options']['#access'] = $has_access;
  $form['revision_information']['#access'] = $has_access;

  $path_to_css_file = drupal_get_path('module', 'sbac_forum');
  $path_to_css_file .= '/css/sbac_forum.css';
  $form['#attached']['css'][] = $path_to_css_file;
}

/**
 * Validation function for setting forum relationshp
 *
 * @param $form
 * @param $form_state
 */
function _sbac_forum__topic_form__default_parent_term_validate($form, &$form_state) {
  $values = $form_state; // Safe so this doesnt act on form_state directly.
  if (isset($values['auto_default_forum_parent'])) {
    $parent_term = taxonomy_term_load($values['auto_default_forum_parent']['#value']);
    if (!empty($parent_term)) { // Check if this is a valid term.
      global $user;
      // Check user has access to do this.
      $has_access = sbac_forum__api__check_forum_view_access($user, $parent_term);
      $is_member = sbac_forum__api__check_user_is_forum_member($parent_term->tid, $user->uid);
      if (($has_access) &&
          ($is_member === TRUE) ) {
        $form_state['values']['field_topic_forum_parent'][LANGUAGE_NONE][0] = get_object_vars($parent_term);
      } else {
        form_set_error('', 'You do not have access to add a topic to this forum.'); // Forum is either restricted or user is not a member.
      }
    } else {
      form_set_error('', 'Could not load associated Forum.'); // someone trying to url hack to a different non-existent forum
    }
  } else {
    form_set_error('', 'There is no Forum associated with this topic post.'); // Default forum parent should be passed in. Otherwise it will be an orphan
  }
}

/**
 * Validation function for the title
 *
 * @param $form
 * @param $form_state
 */
function _sbac_forum__topic_form__title_profanity_validate(&$form, &$form_state) {
  $title = $form_state['values']['title'];
  $bad_words = profanity_validate_text($title);
  if ($bad_words) {
    $error = 'Please remove any inappropriate language from Topic Title.';
    form_set_error('title', $error);
  }
}

/**
 * On add topic node form submission, redirect to proper place.
 *
 * @param $form
 * @param $form_state
 */
function _sbac_forum__add_topic_form_redirect_submit($form, &$form_state) {
  $values = $form;

  $tid = 0;
  $link = 'forums';
  if (isset($values['auto_default_forum_parent']) ) {
    $tid = $values['auto_default_forum_parent']['#value'];
  }
  if (!empty($tid)) {
    $link = 'forums/term/' . $tid;
  }


  if (isset($form_state['node'])) { // Coming from edit form.
    if (!empty($form_state['node']->nid)) {
      $link = 'node/'. $form_state['node']->nid;
    }
  }

  $form_state['redirect'] = $link;
}


// ----------

function sbac_forum_form_comment_node_topic_form_alter(&$form, &$form_state, $form_id) {
  $form['author']['#access'] = FALSE; // Hide this form element.

  $form['comment_body'][LANGUAGE_NONE][0]['value']['#title'] = 'Your response:';

  // Remove all the bloat that comes with this widget.
  $form['field_topic_comment_files'][LANGUAGE_NONE]['#title'] = '';
  $form['field_topic_comment_files'][LANGUAGE_NONE]['#file_upload_title'] = '';
  $form['field_topic_comment_files'][LANGUAGE_NONE]['#file_upload_description'] = '';

  $form['field_topic_comment_links'][LANGUAGE_NONE]['#title'] = '';
}


/**
 * =============================================================================
 *
 *      Forum Term CRUD functions
 *
 * =============================================================================
 */

/**
 * Implements hook_taxonomy_term_insert
 */
function sbac_forum_taxonomy_term_insert($term) {
  if ($term->vocabulary_machine_name == 'forum') { // Adding term to forum
    global $user;
    $term->field_forum_facilitators[LANGUAGE_NONE][0]['target_id'] = $user->uid;
    $term->field_forum_member_count[LANGUAGE_NONE][0]['value'] = 1;

    // Add faci to member list.
    $member_fc = $term->field_fc_forum_members[LANGUAGE_NONE][0]['value'];
    $member_fc_wrapper = entity_metadata_wrapper('field_collection_item', $member_fc);
    if (isset($member_fc_wrapper->field_fc_forum_member)) {
      $member_fc_wrapper->field_fc_forum_member->set($user->uid);
      $member_fc_wrapper->save(TRUE);
    }

    taxonomy_term_save($term);
  }
}

/**
 * Implements hook_taxonomy_term_presave
 */
function sbac_forum_taxonomy_term_presave($term) {
  if ($term->vocabulary_machine_name == 'forum') { // Adding term to forum
    global $user;

    // Cleanup task to ensure that state list is unset if access is set to "all states";
    $state_access = $term->field_forum_access_states[LANGUAGE_NONE][0]['value'];
    if ($state_access) {
      $term->field_state[LANGUAGE_NONE] = array(); // Unset the selection for state lists.
    }

    // Cleanup task to ensure that role list is unset if access is set to "all roles";
    $role_access = $term->field_forum_access_user_roles[LANGUAGE_NONE][0]['value'];
    if ($role_access) {
      $term->field_forum_access_role_list[LANGUAGE_NONE] = array(); // Unset the selection for role lists.
    }
  }
}


/**
 * =============================================================================
 *
 *      Topic Node CRUD functions
 *
 * =============================================================================
 */

/**
 * Implements hook_node_insert
 */
function sbac_forum_node_insert($node) {
  if ($node->type == 'topic') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    if (isset($node_wrapper->field_topic_forum_parent)) {
      $forum_obj = $node_wrapper->field_topic_forum_parent->value();
      if (!empty($forum_obj)) {
        // Update topic counter field on forum.
        $forum_wrapper = entity_metadata_wrapper('taxonomy_term', $forum_obj);
        if (isset($forum_wrapper->field_forum_topic_count)) {
          $current_count = $forum_wrapper->field_forum_topic_count->value();
          $current_count++;
          $forum_wrapper->field_forum_topic_count->set($current_count);
          $forum_wrapper->save(TRUE);
          taxonomy_term_save($forum_obj);
        }
      }
    }
  }
}

/**
 * Implements hook_node_delete
 */
function sbac_forum_node_delete($node) {
  if ($node->type == 'topic') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    if (isset($node_wrapper->field_topic_forum_parent)) {
      $forum_obj = $node_wrapper->field_topic_forum_parent->value();
      if (!empty($forum_obj)) {
        // Update topic counter field on forum.
        $forum_wrapper = entity_metadata_wrapper('taxonomy_term', $forum_obj);
        if (isset($forum_wrapper->field_forum_topic_count)) {
          $current_count = $forum_wrapper->field_forum_topic_count->value();
          $current_count--;
          $forum_wrapper->field_forum_topic_count->set($current_count);
          $forum_wrapper->save(TRUE);
          taxonomy_term_save($forum_obj);
        }
      }
    }
  }
}

/**
 * =============================================================================
 *
 *      Comments for Topic Node CRUD functions
 *
 * =============================================================================
 */

/**
 * Implements hook_comment_insert
 */
function sbac_forum_comment_insert($comment) {
  $related_nid = $comment->nid;
  $comment_author_id = $comment->uid;
  if (!empty($related_nid)) {
    $topic_node = node_load($related_nid);
    $node_wrapper = entity_metadata_wrapper('node', $topic_node);
    if (isset($node_wrapper->field_topic_forum_parent)) {
      $forum_obj = $node_wrapper->field_topic_forum_parent->value();
      if (!empty($forum_obj)) {
        // Update Reply counter field on forum.
        $forum_wrapper = entity_metadata_wrapper('taxonomy_term', $forum_obj);
        if (isset($forum_wrapper->field_forum_topic_count)) {
          $current_count = $forum_wrapper->field_forum_topic_comment_count->value();
          $current_count++;
          $forum_wrapper->field_forum_topic_comment_count->set($current_count);
          $forum_wrapper->save(TRUE);
          taxonomy_term_save($forum_obj);
        }
      }
    }
  }
}

/**
 * Implements hook_comment_delete
 */
function sbac_forum_comment_delete($comment) {
  $related_nid = $comment->nid;
  $comment_author_id = $comment->uid;
  if (!empty($related_nid)) {
    $topic_node = node_load($related_nid);
    $node_wrapper = entity_metadata_wrapper('node', $topic_node);
    if (isset($node_wrapper->field_topic_forum_parent)) {
      $forum_obj = $node_wrapper->field_topic_forum_parent->value();
      if (!empty($forum_obj)) {
        // Update Reply counter field on forum.
        $forum_wrapper = entity_metadata_wrapper('taxonomy_term', $forum_obj);
        if (isset($forum_wrapper->field_forum_topic_count)) {
          $current_count = $forum_wrapper->field_forum_topic_comment_count->value();
          $current_count--;
          $forum_wrapper->field_forum_topic_comment_count->set($current_count);
          $forum_wrapper->save(TRUE);
          taxonomy_term_save($forum_obj);
        }
      }
    }
  }
}
