<?php
/**
 * @file
 * Code for the SBAC Forum feature.
 */

include_once 'sbac_forum.features.inc';
include_once 'includes/sbac_forum.component_alter.inc';
include_once 'includes/sbac_forum.api.inc';

define('SBAC_FORUM_CATEGORY_FILTERS', 'sbac-forum-category-filters');
define('SBAC_FORUM_MY_FORUM_CATEGORY_FILTERS', 'sbac-forum-my-forum-category-filters');

define('SBAC_FORUM_SUBNAV_ACTIVE', 'sbac-forum-sub-nav-active');
define('SBAC_FORUM_SUBNAV_ALL', 'all-forums');
define('SBAC_FORUM_SUBNAV_OWN', 'my-forum');
define('SBAC_FORUM_SUBNAV_KEYWORD', 'keyword-search');

define('SBAC_FORUM_FILTERS_CLOSED', 'sbac-forum-filters-closed');
define('SBAC_FORUM_MY_FORUM_FILTERS_CLOSED', 'sbac-forum-my-forum-filters-closed');

/**
 * =============================================================================
 *
 *      Hooks
 *
 * =============================================================================
 */

/**
 * Implements hook_menu().
 */
function sbac_forum_menu() {
  $items['forums'] = array(
    'title' => 'Forums',
    'file' => 'includes/sbac_forum.pages.inc',
    'page callback' => 'sbac_forum_main_landing_page',
    'access callback' => '_sbac_forum_user_access',
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
    'weight' => -10,
  );

  // Create own menu callback for adding a term. Dont need to mess with menu_alter.
  $items['forums/%taxonomy_vocabulary_machine_name/add'] = array(
    'title' => 'Start A Forum',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_form_term', array(), 1),
    'access callback' => '_sbac_forum_add_forum_user_access',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path('module', 'taxonomy'),
    'file' => 'taxonomy.admin.inc',
  );

  return $items;
}

/**
 * Access callback for Forums page.
 *
 * @return Boolean TRUE/FALSE if user has access to view this page.
 */
function _sbac_forum_user_access() {
  global $user;
  $access = FALSE;
  if (!empty($user->uid)) {
    $access = TRUE;
  }
  return $access;
}

/**
 * Access callback for Add Forum page.
 *
 * @return Boolean TRUE/FALSE if user has access to add a forum.
 */
function _sbac_forum_add_forum_user_access($vocabulary) {
  global $user;
  $access = FALSE;

  // If user is trying to url hack to add terms to other vocabs,
  //   return false immediately.
  if ($vocabulary->machine_name != 'forum') {
    return $access;
  }

  // Anon users should not have access.
  if (!empty($user->uid)) {
    // Facilitators or users with "administer taxonomy" perms can add forums
    if (in_array('facilitator', $user->roles) ||
        user_access('administer taxonomy') ) {
      $access = TRUE;
    }
  }
  return $access;
}


/**
 * Implements hook_block_info().
 *
 * @return mixed
 */
function sbac_forum_block_info() {
  $blocks['sbac_forum_categories'] = array(
    'info' => t('Categories'),
    'region' => 'filter',
    'pages' => "forums",
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'status' => 1,
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * @param string $delta
 *
 * @return array
 */
function sbac_forum_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'sbac_forum_categories':
      module_load_include('inc', 'sbac_forum', 'includes/sbac_forum.forms');
      $block['subject'] = t('');
      $block['content'] = drupal_get_form('sbac_forum_category_forum_form');
      break;
  }
  return $block;
}

/**
 * Implementation of hook_theme()
 */
function sbac_forum_theme($existing, $type, $theme, $path) {
  $items['sbac_forum_filter_categories'] = array(
    'path' => drupal_get_path('module', 'sbac_forum') . '/templates',
    'template' => 'forum-filter-categories',
    'variables' => array(
      'categories' => NULL,
      'cf_value' => NULL,
      'cf_html' => NULL,
    ),
  );

  return $items;
}

/**
 * Implements hook_form_alter
 */
function sbac_forum_form_alter(&$form, $form_state, $form_id) {
}

/**
 * Implements hook_form_FORM-ID_alter
 */
function sbac_forum_form_taxonomy_form_term_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'taxonomy_form_term') {
    if ((isset($form['#term'])) &&
        ($form['#term']['vocabulary_machine_name'] == 'forum') ){
      // Hide the description field that comes with the taxonomy term entity.
      //   Use our own descrition field, more control.
      $form['description']['#access'] = FALSE;

      global $user;
      if ($user->uid != 1) { // Only super admin can see these fields.
        $can_see = FALSE;

        // Membership fields.
        $form['field_forum_facilitators']['#access'] = $can_see;
        $form['field_fc_forum_members']['#access'] = $can_see;

        // Stats fields.
        $form['field_forum_topic_count']['#access'] = $can_see;
        $form['field_forum_topic_comment_count']['#access'] = $can_see;
        $form['field_forum_member_count']['#access'] = $can_see;
        $form['field_forum_last_activity']['#access'] = $can_see;
      }

      $path_to_css_file = drupal_get_path('module', 'sbac_forum');
      $path_to_css_file .= '/css/sbac_forum.css';
      $form['#attached']['css'][] = $path_to_css_file;

      $form['name']['#title'] = 'Forum Title';

      // Tags fields. Add wrapper to group them
      $form['field_subject']['#prefix'] = '<div class="forum-tags-left">';
      $form['field_intended_end_user']['#suffix'] = '</div>';
      $form['field_grades']['#prefix'] = '<div class="forum-tags-right">';
      $form['field_intended_student']['#suffix'] = '</div><div class="clearfix"></div>';


      // Access fields. Modify behaviour.
      $form['field_forum_access_states']['#prefix'] = '<div class="forum-add-access-left">';
      $form['field_state']['#suffix'] = '</div>';
      // $form['field_state']['#suffix'] = '';
      $state_field_state = array(
        'visible' => array(
          ':input[name="field_forum_access_states[und]"]' => array('value' => 0),
        ),
      );
      $form['field_state']['#states'] = $state_field_state;
      unset($form['field_state'][LANGUAGE_NONE]['#options']['_none']); // remove none option

      $form['field_forum_access_user_roles']['#prefix'] = '<div class="forum-add-access-right">';
      $form['field_forum_access_role_list']['#suffix'] = '</div><div class="clearfix"></div>';
      $role_field_state = array(
        'visible' => array(
          ':input[name="field_forum_access_user_roles[und]"]' => array('value' => 0),
        ),
      );
      $form['field_forum_access_role_list']['#states'] = $role_field_state;
      unset($form['field_forum_access_role_list'][LANGUAGE_NONE]['#options']['_none']); // remove none option


      // Modify submit buttons
      $cancel_button_classes = 'sbac-forum-add-forum-cancel-button';
      $form['actions']['cancel_add'] = array(
        '#type'         => 'submit',
        '#value'        => t('Cancel'),
        '#weight' => 4,
        '#limit_validation_errors' => array(),
        '#attributes'   => array(
          'class' => array($cancel_button_classes),
        ),
        '#submit' => array('_sbac_forum__add_forum_form_redirect_submit'),
        '#prefix'       => '<div class="sbac-forum-add-forum-buttons">',
      );
      if (isset($form['actions']['delete'])) { // Edit form
        $form['actions']['delete']['#suffix'] = '</div>';
      } else { // Add forum forum
        $form['actions']['submit']['#value'] = 'Start Forum';
        $form['actions']['submit']['#suffix'] = '</div>';
      }


      $form['#validate'][] = '_sbac_forum__forum_form__access_field_validate';

      // Redirect on successful completion.
      $form['#submit'][] = '_sbac_forum__add_forum_form_redirect_submit';

    }
  }
}

function _sbac_forum__add_forum_form_redirect_submit($form, &$form_state) {
  $form_state['redirect'] = 'forums';
}

function _sbac_forum__forum_form__access_field_validate($form, &$form_state) {
  $values = $form_state['values'];

  $states_field_value = $values['field_forum_access_states'][LANGUAGE_NONE][0]['value'];
  if (!$states_field_value) {
    $selected_states = $values['field_state'];
    if (count($selected_states[LANGUAGE_NONE]) == 1) { // There will be one entry even if empty. Check value.
      $selected_value = array_shift($selected_states[LANGUAGE_NONE]);
      if (empty($selected_value['tid'])) {
        form_set_error('field_state', 'At least one State must be selected');
      }
    }
  }

  $roles_field_value = $values['field_forum_access_user_roles'][LANGUAGE_NONE][0]['value'];
  if (!$roles_field_value) {
    $selected_roles = $values['field_forum_access_role_list'];
    if (count($selected_roles[LANGUAGE_NONE]) == 1) { // There will be one entry even if empty. Check value.
      $selected_value = array_shift($selected_roles[LANGUAGE_NONE]);
      if (empty($selected_value['value'])) {
        form_set_error('field_forum_access_role_list', 'At least one Role must be selected');
      }
    }
  }

}
