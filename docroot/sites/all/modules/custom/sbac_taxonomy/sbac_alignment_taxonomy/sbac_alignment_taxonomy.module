<?php
/**
 * @file
 * Code for the SBAC Alignment Taxonomy feature.
 */

include_once 'sbac_alignment_taxonomy.features.inc';

/**
 * Helper Function
 * Adds single terms.
 */
function sbac_alignment_taxonomy_add_term($vid, $term, $parent_tid) {
  $parent = (object) array(
    'name' => $term['name'],
    'description' => $term['description'],
    'weight' => (isset($term['weight']) ? $term['weight'] : 0),
    'vid' => $vid,
    'parent' => $parent_tid,
    'field_alignment_grade' => array(
      'und' => array(
        array(
          'format' => 'filtered_html',
          'value' => $grade = truncate($term['fkGradeLevel']),
        ),
      ),
    ),
    'field_alignment_key' => array(
      'und' => array(
        array(
          'format' => 'filtered_html',
          'value' => $grade . '|' . $term['key']
        ),
      ),
    ),
    'field_alignment_publication' => array(
      'und' => array(
        array(
          'format' => 'filtered_html',
          'value' => $term['fkPublication']
        ),
      ),
    ),
    'field_alignment_shortname' => array(
      'und' => array(
        array(
          'format' => 'filtered_html',
          'value' => $term['shortName']
        ),
      ),
    ),
  );
  taxonomy_term_save($parent);
  return $parent;
}

/**
 * Helper function
 * Add terms into the vocab.
 */
function sbac_alignment_taxonomy_add_terms($vid, $terms, $parent_tid = 0) {
  foreach ($terms as $term => $data) {

    $parent = (object) array(
      'name' => $term,
      'description' => (isset($data['desc'])) ? $data['desc'] : '',
      'weight' => (isset($data['weight']) ? $data['weight'] : 0),
      'vid' => $vid,
      'parent' => $parent_tid,
    );
    taxonomy_term_save($parent);

    if (isset($data['children']) && !empty($data['children'])) {
      sbac_alignment_taxonomy_add_terms($vid, $data['children'], $parent->tid);
    }
  }
}

/**
 * Helper Function
 * Gets the depth of the term.
 */
function sbac_alignment_taxonomy_term_depth($tid) {
  $parent = db_query("SELECT parent FROM {taxonomy_term_hierarchy} WHERE tid = :tid", array(':tid' => $tid))->fetchField();
  if ($parent == 0) {
    return 1;
  }
  else {
    return 1 + sbac_alignment_taxonomy_term_depth($parent);
  }
}

/**
 * Callback function
 * Deletes vocabulary.
 */
function sbac_alignment_taxonomy_delete_vocab() {
  if (isset($_GET['op'])) {
    if(isset($_GET['vocab'])) {
      $edu_alignment_vocab_name = $_GET['vocab'];
    }
    else {
      $edu_alignment_vocab_name = "education_alignment2";
    }
    $edu_alignment_vocab = taxonomy_vocabulary_machine_name_load($edu_alignment_vocab_name);
    $grade_terms = array();
  
    $delete = TRUE;
    $print = FALSE;
  
    //delete terms
    if ($delete) {
      $terms = taxonomy_get_tree($edu_alignment_vocab->vid);
      foreach ($terms as $term) {
        //if($term->depth > 1){
          taxonomy_term_delete($term->tid);
        //}
      }
    }
  
    if($print) {
      $terms = taxonomy_get_tree($edu_alignment_vocab->vid, 0, NULL, TRUE);
      dsm($terms);
    }
  }

  return '';
}