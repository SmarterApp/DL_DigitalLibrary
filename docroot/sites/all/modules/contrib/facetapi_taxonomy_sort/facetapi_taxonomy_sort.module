<?php
/**
 * @file
 * Adds an option to taxonomy facets to sort by term weight.
 */

/**
 * Tests whether a field is a term reference field.
 *
 * @param array $facet
 *   The facet definition as returned by facetapi_facet_load().
 *
 * @return
 *   TRUE if the field is a term reference field.
 */
function facetapi_taxonomy_sort_is_term_reference_field(array $facet) {
  if ($facet['field api name'] && ($field_info = field_info_field($facet['field api name']))) {
    return ('taxonomy_term_reference' == $field_info['type']);
  }
  else {
    // For Search API, fall back to the field type key.
    // @see http://drupal.org/node/1377734
    return isset($facet['field type']) && 'taxonomy_term' == $facet['field type'];
  }
}

/**
 * Implements hook_facetapi_facet_info_alter().
 */
function facetapi_taxonomy_sort_facetapi_facet_info_alter(array &$facet_info, array $searcher_info) {
  foreach ($facet_info as $name => $facet) {
    // Only act on taxonomy term reference fields.
    if (facetapi_taxonomy_sort_is_term_reference_field($facet)) {
      $facet_info[$name]['alter callbacks'][] = 'facetapi_taxonomy_sort_add_taxonomy_weights';
    }
  }
}

/**
 * Alter callback that adds taxonomy weights to render array.
 */
function facetapi_taxonomy_sort_add_taxonomy_weights(array &$build, FacetapiAdapter $adapter) {
  foreach (taxonomy_term_load_multiple(array_keys($build)) as $tid => $term) {
    $build[$tid]['#taxonomy_weight'] = $term->weight;
  }
}

/**
 * Implements hook_facetapi_sort_info().
 */
function facetapi_taxonomy_sort_facetapi_sort_info() {
  $sorts = array();

  $sorts['taxonomy_weight'] = array(
    'label' => t('Taxonomy weight'),
    'callback' => 'facetapi_taxonomy_sort_sort_taxonopmy',
    'description' => t('Sort by the taxonomy term weight.'),
    'requirements' => array('facetapi_taxonomy_sort_is_taxonomy_facet' => TRUE),
    'weight' => -40,
  );

  return $sorts;
}

/**
 * Checks whether the facet indexes taxonomy terms.
 *
 * @param array $realm
 *   The realm definition as returned by facetapi_realm_load().
 * @param array $facet
 *   The facet definition as returned by facetapi_facet_load().
 * @param $option
 *   If TRUE, the the requirements will pass if the facet indexes taxonomy
 *   terms. If FALSE, the facet must NOT index taxonomy terms in order to pass
 *   the requirements.
 *
 * @return
 *   TRUE if the hierarchical status matches $option, FALSE otherwise.
 */
function facetapi_taxonomy_sort_is_taxonomy_facet(array $realm, array $facet, $option) {
  $is_taxonomy_facet = facetapi_taxonomy_sort_is_term_reference_field($facet);
  return ($option) ? $is_taxonomy_facet : !$is_taxonomy_facet;
}

/**
 * Sorts by taxonomy weight.
 */
function facetapi_taxonomy_sort_sort_taxonopmy(array $a, array $b) {
  $a_count = (isset($a['#taxonomy_weight'])) ? $a['#taxonomy_weight'] : 0;
  $b_count = (isset($b['#taxonomy_weight'])) ? $b['#taxonomy_weight'] : 0;
  if ($a_count == $b_count) {
    return 0;
  }
  return ($a_count < $b_count) ? -1 : 1;
}
