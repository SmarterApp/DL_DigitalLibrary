<?php
/**
 * hook_entity_info_alter
 *
 */
function apachesolr_comments_apachesolr_entity_info_alter(&$entity_info) {
  $entity_info['comment']['indexable'] = TRUE;
  $entity_info['comment']['status callback'][] = 'apachesolr_comment_status_callback';
  $entity_info['comment']['document callback'][] = 'apachesolr_comment_solr_document_comment';
  $entity_info['comment']['reindex callback'] = 'apachesolr_comment_solr_reindex_comment';
  $entity_info['comment']['index_table'] = 'apachesolr_index_entities_comment';

  $entity_info['comment']['view modes']['search_index'] = array(
    'label' => t('Search Index'),
    'custom settings' => 'TRUE',
  );
}


/**
 * Status callback for ApacheSolr, for comment
 */
function apachesolr_comment_status_callback($profile2, $type) {
  return true;
}

/**
 * Builds the comment-specific information for a Solr document.
 *
 * @param Apache_Solr_Document $document
 *   The Solr document we are building up.
 * @param stdClass $entity
 *   The entity we are indexing.
 * @param string $entity_type
 *   The type of entity we're dealing with.
 */
function apachesolr_comment_solr_document_comment(ApacheSolrDocument $document, $comment, $entity_type) {
  global $language;
  //save language
  $backup_language = $language;

  $documents = array();

  $document->entity_id = $comment->cid;
  $document->label = $comment->subject;
  $document->entity_type = $entity_type;
  $document->bs_status = $comment->status;

  $languages = language_list();
  foreach($languages as $langcode => $local_language)
  {
    //switch language to index translated fields
    $language = $local_language;
    $language_document = clone $document;

    $language_document->language = $langcode;
    $node = node_load($comment->nid);
    $build = comment_view($comment, $node,'search_index',$langcode);
    unset($build['#theme']);
    unset($build['links']);
    $text = drupal_render($build);
    $language_document->content = apachesolr_clean_text($text);
    $documents[] = $language_document;
  }

  //restore language
  $language = $backup_language;
  return $documents;
}

/**
 * Reindexing callback for ApacheSolr, for comment
 */
function apachesolr_comment_solr_reindex_comment() {
  //This is what it should be but it doesn't exist in apachesolr module...
  $indexer_table = apachesolr_get_indexer_table('comment');
  $transaction = db_transaction();
  try {
      db_delete($indexer_table)
        ->condition('entity_type', 'comment')
        ->execute();

      $select = db_select('comment', 'c');
      $select->addExpression("'comment'", 'entity_type');
      $select->join('node', 'n', 'n.nid = c.nid');
      $select->addField('c', 'cid', 'entity_id');
      $select->addField('n','type', 'bundle');
      $select->addExpression(REQUEST_TIME, 'changed');
      $results = $select->execute();

      while ($item = $results->fetchAssoc()){
         $item['bundle'] = 'comment_node_'.$item['bundle'];
         $insert = db_insert($indexer_table)
          ->fields(array('entity_id' => $item['entity_id'], 'bundle' => $item['bundle'], 'entity_type' => $item['entity_type'], 'changed' => $item['changed']))
          ->execute();
      }
    }
    catch(Exception $e) {
      dsm($e);
      $transaction->rollback();
        watchdog_exception('Apachesolr Comment', $e);
        return FALSE;
   }

  return TRUE;
}

