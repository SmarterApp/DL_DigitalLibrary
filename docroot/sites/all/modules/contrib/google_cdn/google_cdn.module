<?php

/**
 * @file
 * Primary file that contains the Google CDN functionality.
 */

/**
 * Denotes "AWS SDK for PHP" minimum version number.
 */
define('GOOGLE_CDN_MINIMUM_VERSION', '1.0.5');
define('GOOGLE_CDN_ADMIN_SUBMIT_BUTTON', 'Save Configuration');
define('GOOGLE_CDN_ADMIN_TEST_CONNECTION_BUTTON', 'Test Connection');

/**
 * Implements hook_menu().
 */
function google_cdn_menu() {
  $items = array();

  $items['admin/config/media/google_cdn'] = array(
    'title' => 'Google CDN',
    'description' => 'Configure Google credentials and settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_cdn_admin'),
    'access arguments' => array('administer google cdn'),
    'file' => 'google_cdn.admin.inc'
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function google_cdn_permission() {
  return array(
    'administer google cdn' => array(
      'title' => t('Administer Google CDN'),
    ),
  );
}

/**
 * Implements hook_libraries_info()
 */
function google_cdn_libraries_info() {
  return array(
    'google-api-php-client' => array(
      'title' => 'Google SDK for PHP',
      'vendor url' => 'http://code.google.com/p/google-api-php-client/',
      'download url' => 'http://code.google.com/p/google-api-php-client/downloads/list',
      'version arguments' => array(
        'file' => 'src/Google/Client.php',
        'pattern' => '/LIBVER = \"(\d+\.\d+\.?\d?).*/',
        'lines' => 45,
        'cols' => 80,
      ),
      'files' => array(
        'php' => array(
          'src/Google/Client.php',
          'src/Google/Service/Storage.php',
        ),
      ),
    ),
  );
}

/**
 *
 */
function google_cdn_init() {
  $var =  libraries_get_path('google-api-php-client') . '/src/';
  $local_file_path = realpath($var);
  set_include_path(get_include_path() . PATH_SEPARATOR . $local_file_path);
}

/**
 * Implements hook_stream_wrappers().
 *
 * Create a stream wrapper for Google CDN.
 */
//function google_cdn_stream_wrappers() {
//  return array(
//    'google_cdn' => array(
//      'name' => 'Google CDN',
//      'class' => 'GoogleCDNStreamWrapper',
//      'description' => t('Google CDN (Cloud Storage)'),
//    ),
//  );
//}

/**
 * Implements hook_file_download().
 *
 * Prevents users from trying to download the p12 key.
 *
 * @param $uri
 * @return bool
 */
function google_cdn_file_download($uri) {
  if (strpos($uri, 'google_cdn') !== FALSE) {
    return -1;
  }
  return NULL;
}
