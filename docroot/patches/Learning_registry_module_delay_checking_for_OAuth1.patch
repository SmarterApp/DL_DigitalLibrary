Index: docroot/sites/all/modules/contrib/learning_registry/learning_registry.module
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docroot/sites/all/modules/contrib/learning_registry/learning_registry.module	(revision 51ffd5b39cba792148ab4af71e5f1e6cfacf1f8f)
+++ docroot/sites/all/modules/contrib/learning_registry/learning_registry.module	(revision )
@@ -57,8 +57,8 @@
   switch ($path) {
     case 'admin/help#learning_registry':
       $output = '<p>' .
-              t('Pushes Drupal node data to the specified Learning Registry node.') .
-              '<p>';
+        t('Pushes Drupal node data to the specified Learning Registry node.') .
+        '<p>';
       break;
   }
   return $output;
@@ -134,20 +134,22 @@
 function learning_registry_node_insert($node) {
   module_load_include('inc', 'learning_registry', 'learning_registry.learning_registry');
   $nodes_to_publish = variable_get('learning_registry_node_types', array());
+  if (isset($nodes_to_publish[$node->type]) && $nodes_to_publish[$node->type] != FALSE && $node->nid) {
-  $oauth_consumer = learning_registry_oauth_verify();
+    $oauth_consumer = learning_registry_oauth_verify();
-  if (isset($nodes_to_publish[$node->type]) && $nodes_to_publish[$node->type] != FALSE && $node->nid && $oauth_consumer) {
+    if ($oauth_consumer) {
-    // Switch case below used to accomodate more methods (update, delete)
-    // in the future.
-    if ($node->status == 1) {
-      if (variable_get('learning_registry_queuing', LEARNING_REGISTRY_QUEUE_IMMEDIATE) == LEARNING_REGISTRY_QUEUE_QUEUED) {
-        _learning_registry_queue_node($node->nid);
-      }
-      else {
-        _learning_registry_publish($node);
-      }
-    }
-  }
-}
+      // Switch case below used to accomodate more methods (update, delete)
+      // in the future.
+      if ($node->status == 1) {
+        if (variable_get('learning_registry_queuing', LEARNING_REGISTRY_QUEUE_IMMEDIATE) == LEARNING_REGISTRY_QUEUE_QUEUED) {
+          _learning_registry_queue_node($node->nid);
+        }
+        else {
+          _learning_registry_publish($node);
+        }
+      }
+    }
+  }
+}
 
 /**
  * Implements hook_node_update().
@@ -296,8 +298,7 @@
     try {
       $oauth_consumer->fetch($test_url . '/auth/oauth_verify', array(), OAUTH_HTTP_METHOD_POST, array('Content-Type' => 'application/json'));
       $result = $oauth_consumer->getLastResponse();
-    }
-    catch (OAuthException $e) {
+    } catch (OAuthException $e) {
       watchdog('learning_registry', $e->getMessage(), WATCHDOG_ERROR);
     }
   }
