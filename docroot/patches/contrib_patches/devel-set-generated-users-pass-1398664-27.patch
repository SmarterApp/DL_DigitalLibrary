diff --git a/devel_generate/devel_generate.drush.inc b/devel_generate/devel_generate.drush.inc
index 7dfeacf..6def5ec 100644
--- a/devel_generate/devel_generate.drush.inc
+++ b/devel_generate/devel_generate.drush.inc
@@ -17,6 +17,7 @@ function devel_generate_drush_command() {
     'options' => array(
       'kill' => 'Delete all users before generating new ones.',
       'roles' => 'A comma delimited list of role IDs which should be granted to the new users. No need to specify authenticated user role.',
+      'pass' => 'Set a password for all generated users.',
     ),
     'aliases' => array('genu'),
   );
@@ -86,7 +87,9 @@ function drush_devel_generate_users($num_users = NULL) {
   }
   drush_generate_include_devel();
   $roles = drush_get_option('roles') ? explode(',', drush_get_option('roles')) : array();
-  devel_create_users($num_users, drush_get_option('kill'), 0, $roles);
+  $pass = drush_get_option('pass', NULL);
+
+  devel_create_users($num_users, drush_get_option('kill'), 0, $roles, $pass);
   drush_log(t('Generated @number users.', array('@number' => $num_users)), 'success');
 }
 
diff --git a/devel_generate/devel_generate.inc b/devel_generate/devel_generate.inc
index d8ecc39..3a8d1cf 100644
--- a/devel_generate/devel_generate.inc
+++ b/devel_generate/devel_generate.inc
@@ -11,8 +11,10 @@
  *  The max age of each randomly-generated user, in seconds.
  * @param $roles
  *  An array of role IDs that the users should receive.
+ * @param $pass
+ *  A string to be used as common password for all generated users. Defaults to NULL.
  */
-function devel_create_users($num, $kill, $age = 0, $roles = array()) {
+function devel_create_users($num, $kill, $age = 0, $roles = array(), $pass = NULL) {
   $url = parse_url($GLOBALS['base_url']);
   if ($kill) {
     $uids = db_select('users', 'u')
@@ -45,7 +47,7 @@ function devel_create_users($num, $kill, $age = 0, $roles = array()) {
       $edit = array(
         'uid'     => NULL,
         'name'    => $name,
-        'pass'    => NULL, // No password avoids user_hash_password() which is expensive.
+        'pass'    => $pass,
         'mail'    => $name . '@' . $url['host'],
         'status'  => 1,
         'created' => REQUEST_TIME - mt_rand(0, $age),
@@ -103,6 +105,7 @@ function devel_create_users($num, $kill, $age = 0, $roles = array()) {
         // Save the user record with the new picture.
         $edit = (array) $account;
         $edit['picture'] = $file;
+        $edit['pass'] = $pass; // Reassign password as it is replaced with the hashed version in $account
         user_save($account, $edit);
       }
     }
diff --git a/devel_generate/devel_generate.module b/devel_generate/devel_generate.module
index 5a942fe..107624c 100644
--- a/devel_generate/devel_generate.module
+++ b/devel_generate/devel_generate.module
@@ -71,6 +71,14 @@ function devel_generate_users_form() {
     '#options' => $options,
   );
 
+  $form['pass'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Password'),
+    '#default_value' => NULL,
+    '#size' => 32,
+    '#description' => t('If set, all new users will have this password. <strong>Leave this field empty if you do not need to set a password.</strong>'),
+  );
+
   $options = array(1 => t('Now'));
   foreach (array(3600, 86400, 604800, 2592000, 31536000) as $interval) {
     $options[$interval] = format_interval($interval, 1) . ' ' . t('ago');
@@ -96,7 +104,7 @@ function devel_generate_users_form() {
 function devel_generate_users_form_submit($form, &$form_state) {
   module_load_include('inc', 'devel_generate');
   $values = $form_state['values'];
-  devel_create_users($values['num'], $values['kill_users'], $values['time_range'], $values['roles']);
+  devel_create_users($values['num'], $values['kill_users'], $values['time_range'], $values['roles'], $values['pass']);
 }
 
 /**
